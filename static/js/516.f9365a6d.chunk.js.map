{"version":3,"file":"static/js/516.f9365a6d.chunk.js","mappings":"yNAiCA,UA7Ba,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAaJ,GAFb,OAEbK,EAFa,OAGnBN,EAAQM,EAAKP,MAHM,gDAKnBQ,QAAQC,IAAR,MALmB,yDAAH,qDASpBJ,GACD,GAAE,CAACH,KAEF,iCACE,kCACA,eAAIQ,MAAO,CAAEC,QAAS,SAAtB,SACGX,EACGA,EAAKY,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,IACd,+BAIX,C,+LC7BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,OAAQ,CAAEC,cAAe,QAASC,SAAU,SAC5CC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACkBT,EAAAA,EAAAA,GAAM,oBAAqBC,GAD7C,uBACGV,EADH,EACGA,KADH,kBAEEA,EAAKmB,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,8FAAsCC,EAAtC,+BAA6C,EAA7C,UACkBb,EAAAA,EAAAA,GAAM,sBAAD,OACJY,EADI,iBACUC,GACpCZ,GAHG,uBACGV,EADH,EACGA,KADH,kBAKEA,EAAKmB,SALP,mEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,0FACkBC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,GAAME,GADvC,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA4BS,GAA5B,0FACkBC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwBE,GAD/C,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,8FAAmCc,EAAnC,+BAA0C,EAA1C,UACkBb,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,yBAA6Bc,GAAQZ,GAD5D,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,mE","sources":["components/cast/cast.jsx","services/services.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/services';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <>\n      <p>Cast:</p>\n      <ul style={{ display: 'block' }}>\n        {cast\n          ? cast.map(actor => <li key={actor.id}>{actor.name}</li>)\n          : 'Sorry we can`t find cast'}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  params: { include_adult: 'false', language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxN2IyOGI2N2ZhY2YwZGUwZGVhMWI1YzIwYjQzODJmYiIsInN1YiI6IjY0OGE4NjRkMjYzNDYyMDE0ZTU2MDkxYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IGRpPwwg9WreG7ODGxMmPXdHj3eBwMPKy6uxkDfpKQ4',\n  },\n};\n\nexport async function getDayTrendMovies() {\n  const { data } = await axios('trending/all/day?', options);\n  return data.results;\n}\n\nexport async function getMovieByQuery(query, page = 1) {\n  const { data } = await axios(\n    `search/movie?query=${query}&page=${page}`,\n    options\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios(`movie/${id}`, options);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios(`movie/${id}/credits`, options);\n  return data;\n}\n\nexport async function getMovieReviews(id, page = 1) {\n  const { data } = await axios(`movie/${id}/reviews?page=${page}`, options);\n  return data;\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCast","data","console","log","style","display","map","actor","name","id","axios","options","method","params","include_adult","language","headers","accept","Authorization","getDayTrendMovies","results","getMovieByQuery","query","page","getMovieDetails","getMovieReviews"],"sourceRoot":""}