{"version":3,"file":"static/js/847.0d0bf185.chunk.js","mappings":"yNAsCA,UAlCe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEFC,EAAAA,EAAAA,IAAgBJ,GAFd,OAEfK,EAFe,OAGrBN,EAAUM,EAAKC,SAHM,gDAKrBC,QAAQC,IAAR,MALqB,yDAAH,qDAStBL,GACD,GAAE,CAACH,KAEF,iCACE,oCACA,wBACGF,EACGA,EAAOW,KAAI,SAAAC,GAAE,OACX,2BACE,oCAAYA,EAAGC,WACf,oCAAYD,EAAGE,aAFRF,EAAGG,GADD,IAMb,iCAIX,C,+LClCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,OAAQ,CAAEC,cAAe,QAASC,SAAU,SAC5CC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACkBT,EAAAA,EAAAA,GAAM,oBAAqBC,GAD7C,uBACGV,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAKA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,8FAAsCC,EAAtC,+BAA6C,EAA7C,UACkBZ,EAAAA,EAAAA,GAAM,sBAAD,OACJW,EADI,iBACUC,GACpCX,GAHG,uBACGV,EADH,EACGA,KADH,kBAKEA,EAAKC,SALP,mEAQA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,0FACkBC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,GAAME,GADvC,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA4Bf,GAA5B,0FACkBC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwBE,GAD/C,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA+BS,GAA/B,8FAAmCa,EAAnC,+BAA0C,EAA1C,UACkBZ,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,yBAA6Ba,GAAQX,GAD5D,uBACGV,EADH,EACGA,KADH,kBAEEA,GAFF,mE","sources":["components/reviews/reviews.jsx","services/services.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/services';\n\nconst Review = () => {\n  const [review, setReview] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReview = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReview(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReview();\n  }, [movieId]);\n  return (\n    <>\n      <p>Review:</p>\n      <ul>\n        {review\n          ? review.map(ar => (\n              <li key={ar.id}>\n                <p>Author: {ar.author}</p>\n                <p>Review: {ar.content}</p>\n              </li>\n            ))\n          : 'Sorry we can`t find Review'}\n      </ul>\n    </>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  params: { include_adult: 'false', language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxN2IyOGI2N2ZhY2YwZGUwZGVhMWI1YzIwYjQzODJmYiIsInN1YiI6IjY0OGE4NjRkMjYzNDYyMDE0ZTU2MDkxYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IGRpPwwg9WreG7ODGxMmPXdHj3eBwMPKy6uxkDfpKQ4',\n  },\n};\n\nexport async function getDayTrendMovies() {\n  const { data } = await axios('trending/all/day?', options);\n  return data.results;\n}\n\nexport async function getMovieByQuery(query, page = 1) {\n  const { data } = await axios(\n    `search/movie?query=${query}&page=${page}`,\n    options\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const { data } = await axios(`movie/${id}`, options);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios(`movie/${id}/credits`, options);\n  return data;\n}\n\nexport async function getMovieReviews(id, page = 1) {\n  const { data } = await axios(`movie/${id}/reviews?page=${page}`, options);\n  return data;\n}\n"],"names":["useState","review","setReview","movieId","useParams","useEffect","fetchMovieReview","getMovieReviews","data","results","console","log","map","ar","author","content","id","axios","options","method","params","include_adult","language","headers","accept","Authorization","getDayTrendMovies","getMovieByQuery","query","page","getMovieDetails","getMovieCast"],"sourceRoot":""}